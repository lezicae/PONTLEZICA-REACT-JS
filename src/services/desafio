/*
desafio

falta:
solo falta agregar una consulta a 1 documento

y filtro de los documentos en base a la caterogira


hecho:
conectar la DB

las promise

consulta de todos los productos

querys, consulta a la collection

consutlas simples

cambiamos que antes de llamar al get docs hacemos

const getitems = (categoryparams) => {
    return new Promise((resolve) => {
        const todos = collection(firestoreDB, "products");
        const q= query(todos, where("category", "==", categoryparams));
        get docs(q).then(res => {
            setData(res.docs.map(doc=> {

const getitems= category => promise
const status = useparams

Consulta de todo

const getAllItems = ()  => {
  return new Promise((resolve) => {
  getDocs(docsSnapshot).then(res => {
  // transformar el array del snapshot en un array que podamos usar en react con un map
    const docsData = res.docs.map(doc=> {
      return{
        ...doc.data(), id: doc.id
      }
    });
    resolve(docsData);
    setData(docsData);
  });
})
}

ItemDetail

use collection, getdoc, doc

useeffect

if statuss === undefined
PROMISE
SETSTATE

else



function callwithid(id)
return new promise
calleo db
dataref doc(collection, id)

getDoc(docRef).then (snapshot => {
    resolve(
        {...snapshot.data(), id: snapshot.id}

    )
    )

return { ...docRef.Data(), id: DocRef.id }


Filtro
querys: consultas personalizadas

useparams > useeffect > if > call promise pasandole useparams > setstate

*/